<style lang="scss">
@import "../../styles/fns";

// .category-list-container {
//   width: 154rpx;
//   height: 100%;
// }

.category-list-scroll {
  background-color: #f8f8f8;
  height: 100%;
  
}

.category-list {
  padding-bottom: 170rpx;
}

.category-item {
  // color: #333;
  // background-color: #fff;
  display: flex;
  color: #666;
  padding: 35rpx 15rpx;
  justify-content: center;
  align-items: center;
  box-sizing: border-box;
  border-bottom: 1px solid #e8e8e8;

  &.active {
    color: #333;
    background-color: #fff;
  }

  .item-icon {
    width: 26rpx;
    height: 26rpx;
    margin-right: 12rpx;
    vertical-align: middle;
  }

  .item-txt {
    display: inline-block;
    line-height: 30rpx;
    font-size: px2rem(24);
    vertical-align: middle;
  }
}
</style>

<template>

<!-- <view class="category-list-container"> -->
  <scroll-view class="category-list-scroll" scroll-y style="width: {{width}}rpx">
    <view class="category-list">
      <view wx:for="{{allCategories}}" wx:key="id" class="category-item{{item.id == activeId ? ' active' : ''}}" @tap="tapCategory({{item.id}})">
        <image class="item-icon" src="{{item.icon_url}}" wx:if="{{item.icon_url}}" />
        <text class="item-txt">{{item.name}}</text>
      </view>
    </view>
  </scroll-view>
</template>

<script>
import wepy from 'wepy'
import { connect } from 'wepy-redux'
import { store, fetchGoodsInCateIfNeeded, selectCategoryId } from 'store/index'
import { getActiveCategoryId } from 'store/reducers'

@connect({
  activeId(state) {
    return getActiveCategoryId(state)
  }
})
export default class CategoryList extends wepy.component {
  data = {
    activeCategoryId: null
  }

  props = {
    allCategories: {
      type: Array,
      default: []
    },
    width: String
  }

  methods = {
    tapCategory(categoryId) {
      this.activeCategoryId = categoryId

      // 不将其放入store中了, 简单点
      // this.$invoke('../GoodsList', 'activeCategoryId', categoryId)
      
      // activeCategoryId放到store中了
      store.dispatch(selectCategoryId(categoryId))
      store.dispatch(fetchGoodsInCateIfNeeded(categoryId))
    }
  }
}
</script>