<style lang="scss">
@import '../styles/fns';

.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100vw;
  height: 100vh;
  z-index: 200;
  font-size: px2rem(28);
  -webkit-font-smoothing: antialiased;
  background: rgba(#000, 0.5);
  overflow: hidden;
  // animation
  opacity: 0;
  transition: opacity 0.3s;
  perspective: 500px;

  &.is-visible {
    opacity: 1;
  }

  &.is-notshow {
    display: none;
  }
}
</style>

<template>
  <view id="__modal-overlay__" class="modal-overlay{{overlayClasses}}" @tap="onOverlayTap">
    <view class="modal-content">
      <slot></slot>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'

export default class ModalOverlay extends wepy.component {

  data = {
    // opacity属性
    visible: false,
    // 显示, 隐藏
    show: false
  }

  computed = {
    overlayClasses() {
      let cls = ''
      
      if (!this.show) {
        cls += ' is-notshow'
      }

      if (this.visible) {
        cls += ' is-visible'
      }

      return cls
    }
  }

  onLoad() {
  }

  methods = {
    onOverlayTap(evt) {
      let target = evt.target
      let currentTarget = evt.currentTarget
      if (target.id == currentTarget.id && target.id == '__modal-overlay__') {
        this.hideIt()
      }
    }
  }

  /**
   * 关闭modal并emit 'close'事件
   */
  hideIt() {
    this.visible = false
    setTimeout(() => {
      this.show = false
      this.$apply()
    }, 300)
    this.$emit('hide')
  }

  showIt() {
    this.show = true
    this.$apply()
    setTimeout(() => {
      this.visible = true
      this.$apply()
    }, 30)
    this.$emit('show')
  }
}
</script>

